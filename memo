めも
名前を打ちやすい名前にしたい
案：sake,faja,vom,vum,vkm,aker,rake
typoでvimが起動する
仕様
コマンドラインツールでcbuild {command} [file]でcファイルを作成コンパイル，実行する．
最初の引数はコマンド
次の引数はオプションかファイル名
無効な引数の場合は使い方ガイドを表示する
オプションはハイフン(-)から始める

コマンド詳細：
  build,run,new,gen,
  build:ターゲット名を指定してmakeを実行する．省略可能
  run:実行ファイル名を指定して実行する．引数が一つでないとエラー
      オプションにより各種リダイレクトの設定ができる．デフォルトは入力ファイルをリダイレクト -ioでリダイレクト
  new:新しいmakefileを作成する．引数はいらない．すでにmakefile(Makefile)が存在する場合はエラー
  gen:新しい.cファイルを作成する．引数はファイル名(拡張子なし)，ただ作成したい場合も対応したい できた(複数指定は可能にしたい．指定したファイル名をmakefileに足すこともしたい．)
  genh:headerファイルを作成する．需要は多分ない
  genf:分割コンパイル,こいつをただのファイル作成にしてもいいかもしれない
  add:makeに加える
  rm:.oファイルと実行ファイルを削除する．(make cleanでよくね？)


class詳細:
コンストラクタは引数オブジェクトを投げる
引数の数はARGV.sizeで取得可能，引数なしは0になる
Command:
  他のベース
  run関数を宣言

Gen:Commandを継承
  コンストラクタ：引数のオブジェクトをもらう#引数をもらう(現状)
  引数の数でrun関数の挙動が変化
  filenameがすでに存在するかは確認する
  makefileのターゲットに追加する
  ファイルの内容をバッファに保存してバックアップを作り置換しファイルに書き込む
  backupとかはカレントディレクトリに.ディレクトリを作ってそこに放ればいいんでない

流れ
	第一引数を見て処理を振り分ける


正規表現：
/^TARGET.*/で行頭がTARGETの行を取れるはず
^は行頭 .*は.(どんな文字でも)が0字以上続く
gsub関数(pattern,replacement)
patternに()をつけた中の部分は,replacementで\1,\2などで参照可能
例 gsub(/^TARGET.*/,'\1 #{str}')

/^~/

謎：
引数に何も入れないとARGV.sizeは0
しかし，ARGV.delete_at(1)はARGV.sizeはnil
